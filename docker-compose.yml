version: "3.8"

services:
  redis:
    extends:
      file: docker-compose.base.yml
      service: redis
    volumes:
      - ./docker/redis/data:/data
    profiles:
      - base
      - all

  postgres:
    extends:
      file: docker-compose.base.yml
      service: postgres
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
    profiles:
      - base
      - all

  localstack:
    extends:
      file: docker-compose.base.yml
      service: localstack
    volumes:
      - "./docker/localstack/scripts/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh" # ready hook
      - "./docker/localstack/data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    profiles:
      - base
      - all

  quadratic-client:
    build:
      context: .
      dockerfile: quadratic-client/Dockerfile
    env_file:
      - quadratic-client/.env.local
      - quadratic-client/.env.docker
    restart: "always"
    ports:
      - "3000:3000"
    command: "npm start --workspace=quadratic-client -- --host"
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - client
      - frontend
      - all
    networks:
      - host

  quadratic-api:
    build:
      context: .
      dockerfile: quadratic-api/Dockerfile
    env_file:
      - quadratic-api/.env
      - quadratic-api/.env.docker
    restart: "always"
    ports:
      - "8000:8000"
    command: "npm start --workspace=quadratic-api"
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - api
      - frontend
      - all

  quadratic-multiplayer:
    build:
      context: .
      dockerfile: quadratic-multiplayer/Dockerfile
      args:
        - binary=quadratic-multiplayer
    env_file:
      - quadratic-multiplayer/.env.docker
    # override env vars here
    environment:
      # QUADRATIC_API_URI: http://host.docker.internal:8000
      RUST_LOG: info
    restart: "always"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      quadratic-api:
        condition: service_started
    profiles:
      - backend
      - quadratic-multiplayer
      - all
    networks:
      - host

  quadratic-files:
    build:
      context: .
      dockerfile: quadratic-files/Dockerfile
      args:
        - binary=quadratic-files
    env_file:
      - quadratic-files/.env.docker
    # override env vars here
    environment:
      QUADRATIC_API_URI: http://host.docker.internal:8000
      RUST_LOG: info
    restart: "always"
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      quadratic-api:
        condition: service_started
    profiles:
      - backend
      - quadratic-files
      - all

  quadratic-connection:
    build:
      context: .
      dockerfile: quadratic-connection/Dockerfile
      args:
        - binary=quadratic-connection
    env_file:
      - quadratic-connection/.env.docker
    # override env vars here
    environment:
      QUADRATIC_API_URI: http://host.docker.internal:8000
      RUST_LOG: info
    restart: "always"
    ports:
      - "3003:3003"
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    #   quadratic-api:
    #     condition: service_started
    profiles:
      - backend
      - quadratic-connection
      - all

  # Databases to be used for testing by the connection service

  postgres-connection:
    image: postgres:15
    restart: always
    container_name: postgres-connection
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres-connection
      POSTGRES_USER: user
      PGUSER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d postgres-connection"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./docker/postgres-connection/data:/var/lib/postgresql/data
      - ./docker/postgres-connection/scripts:/docker-entrypoint-initdb.d
    profiles:
      - additional-databases
      - quadratic-connection
      - quadratic-connection-test
      - all

  mysql-connection:
    image: mysql:8
    restart: always
    container_name: mysql-connection
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: mysql-connection
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./docker/mysql-connection/data:/var/lib/mysql
      - ./docker/mysql-connection/scripts:/docker-entrypoint-initdb.d/
    profiles:
      - additional-databases
      - quadratic-connection
      - quadratic-connection-test
      - all

volumes:
  docker:
    name: docker

networks:
  host:
