[package]
name = "quadratic-core"
version = "0.1.4"
authors = ["Andrew Farkas <andrew.farkas@quadratic.to>"]
edition = "2021"
description = "Infinite data grid with Python, JavaScript, and SQL built-in"
repository = "https://github.com/quadratichq/quadratic"
license = "MIT"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
anyhow = "1.0"
async-trait = "0.1.63"
futures = "0.3.25"
itertools = "0.10.5"
lazy_static = "1.4"
regex = "1.7"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde-wasm-bindgen = "0.4.5"
smallvec = "1.10.0"
strum = "0.24.1"
strum_macros = "0.24.3"
wasm-bindgen = "0.2.83"
wasm-bindgen-futures = "0.4.33"
petgraph = "0.6.2"
pollster = "0.2.5"
js-sys = "0.3.60"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
proptest = "1.0.0"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
