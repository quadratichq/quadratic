name: QA

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

# Use runs on `ubuntu-latest-8-cores`. All of our self hosted runners use this tag.
# Our runners pick up jobs first, and if all our runners are being used or are down
# it will automatically back up to using GitHub hosted runners.

# Require previous builds and deployments to finish before starting a new one
# Not sure how Pulumi would handle being terminated when changing a stack.
concurrency:
  group: qa

jobs:
  infra:
    needs: [build_preview_images]
    name: Create or Update Pulumi Infrastructure Stack
    runs-on: blacksmith-2vcpu-ubuntu-2204
    if: github.head_ref == 'qa' && github.base_ref == 'main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: pulumi/actions@v4

      - name: Update Pulumi Infrastructure
        working-directory: infra
        run: |
          npm ci

          pulumi org set-default quadratic

          STACK_NAME="quadratic-qa"
          if ! pulumi stack ls | grep -q "^$STACK_NAME"; then
            echo "Stack $STACK_NAME does not exist. Initializing..."
            pulumi stack init $STACK_NAME
          else
            echo "Stack $STACK_NAME already exists."
            pulumi stack select $STACK_NAME
          fi

          # Point to the Pulumi ESC Environment
          cat <<EOF | tee Pulumi.$STACK_NAME.yaml
          environment:
            - aws-infra-development
          EOF

          pulumi config set multiplayer-subdomain multiplayer-pr-qa
          pulumi config set files-subdomain files-pr-qa
          pulumi config set connection-subdomain connection-pr-qa
          pulumi config set docker-image-tag pr-qa
          pulumi config set quadratic-api-uri https://quadratic-staging.herokuapp.com
          pulumi config set is-preview true

          pulumi up -y
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOPMENT }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOPMENT }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PR_ID: ${{ github.event.pull_request.number }}

  build_preview_images:
    name: Build ${{ matrix.service }}
    runs-on: blacksmith-4vcpu-ubuntu-2204
    if: github.head_ref == 'qa' && github.base_ref == 'main'
    strategy:
      matrix:
        service: [multiplayer, files, connection]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOPMENT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOPMENT }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: quadratic-${{ matrix.service }}-development
          IMAGE_TAG: pr-qa
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f quadratic-${{ matrix.service }}/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
