{
  "sheets": [
    {
      "id": {
        "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
      },
      "name": "Sheet 1",
      "color": null,
      "order": "a0",
      "offsets": [
        [
          [
            0,
            275.9100338070991
          ]
        ],
        []
      ],
      "columns": [
        [
          0,
          {
            "id": {
              "id": "f992e95d-bb22-463c-87b8-c67b7a65ac32"
            },
            "values": {
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Quick start"
                    }
                  ]
                }
              },
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "2. Move to an empty cell and press ="
                    }
                  ]
                }
              },
              "2": {
                "y": 2,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Read more docs.quadratichq.com"
                    }
                  ]
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "3. Right click to access formatting menu"
                    }
                  ]
                }
              },
              "13": {
                "y": 13,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "6. Blue cell outlines show you what cells"
                    }
                  ]
                }
              },
              "11": {
                "y": 11,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "4. Reference other cell values in Python"
                    }
                  ]
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "    contain code and purple for formulas."
                    }
                  ]
                }
              },
              "17": {
                "y": 17,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "More examples in File > Open sample"
                    }
                  ]
                }
              },
              "1": {
                "y": 1,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "The data science spreadsheet"
                    }
                  ]
                }
              },
              "12": {
                "y": 12,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "5. Double click and correct this error"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "1. Cells can contain code"
                    }
                  ]
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "    to create a new Formula or Python cell"
                    }
                  ]
                }
              },
              "0": {
                "y": 0,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Quadratic"
                    }
                  ]
                }
              }
            },
            "spills": {},
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "0": {
                "y": 0,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "17": {
                "y": 17,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {
              "1": {
                "y": 1,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "2": {
                "y": 2,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          1,
          {
            "id": {
              "id": "b25c66f7-58c4-47bc-8a3e-06d10bfeeca6"
            },
            "values": {
              "10": {
                "y": 10,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Bold Me"
                    }
                  ]
                }
              }
            },
            "spills": {
              "11": {
                "y": 11,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"b25c66f7-58c4-47bc-8a3e-06d10bfeeca6\"},\"row\":{\"id\":\"2603ae46-6447-4da8-b3ed-7a5c3b32c814\"}}",
                  "len": 1
                }
              },
              "12": {
                "y": 12,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"b25c66f7-58c4-47bc-8a3e-06d10bfeeca6\"},\"row\":{\"id\":\"83b50319-10a1-4fbf-a6c0-88af771da674\"}}",
                  "len": 1
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"b25c66f7-58c4-47bc-8a3e-06d10bfeeca6\"},\"row\":{\"id\":\"65334faf-6836-41b7-bef4-3360c1904799\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {
              "10": {
                "y": 10,
                "content": {
                  "value": false,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          3,
          {
            "id": {
              "id": "7f5e7768-bfb8-45b5-ab2d-414ea1c4ef29"
            },
            "values": {
              "9": {
                "y": 9,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Ex Data"
                    }
                  ]
                }
              },
              "11": {
                "y": 11,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "SUM Python"
                    }
                  ]
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "SUM Formula"
                    }
                  ]
                }
              }
            },
            "spills": {},
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {
              "9": {
                "y": 9,
                "content": {
                  "value": false,
                  "len": 1
                }
              }
            },
            "italic": {
              "11": {
                "y": 11,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          4,
          {
            "id": {
              "id": "634396df-a29e-44c1-96eb-18667c31cacb"
            },
            "values": {
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Example data"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "number",
                      "value": "343"
                    }
                  ]
                }
              },
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "number",
                      "value": "120"
                    }
                  ]
                }
              }
            },
            "spills": {
              "11": {
                "y": 11,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"634396df-a29e-44c1-96eb-18667c31cacb\"},\"row\":{\"id\":\"2603ae46-6447-4da8-b3ed-7a5c3b32c814\"}}",
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"634396df-a29e-44c1-96eb-18667c31cacb\"},\"row\":{\"id\":\"2fd8d67b-9c39-4ab5-a756-b8e52bae1f9a\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {
              "7": {
                "y": 7,
                "content": {
                  "value": "rgb(218, 240, 255)",
                  "len": 1
                }
              },
              "8": {
                "y": 8,
                "content": {
                  "value": "rgb(218, 240, 255)",
                  "len": 1
                }
              }
            }
          }
        ],
        [
          6,
          {
            "id": {
              "id": "e0808990-5990-4c1d-a51d-ac6efee8ce81"
            },
            "values": {
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "AAPL"
                    }
                  ]
                }
              },
              "12": {
                "y": 12,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Use Python packages from PIP"
                    }
                  ]
                }
              },
              "13": {
                "y": 13,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Generate a fake person using the Python package Faker"
                    }
                  ]
                }
              },
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Python examples"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Make an API request"
                    }
                  ]
                }
              }
            },
            "spills": {
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ffb3288a-95f0-4c6b-88f2-f9bdce366ea2\"}}",
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ffb3288a-95f0-4c6b-88f2-f9bdce366ea2\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {
              "12": {
                "y": 12,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {
              "8": {
                "y": 8,
                "content": {
                  "value": "rgb(218, 240, 255)",
                  "len": 1
                }
              }
            }
          }
        ],
        [
          7,
          {
            "id": {
              "id": "7eca6f1a-176a-4b58-bdfa-81ecc5c9441f"
            },
            "values": {
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "< - Try changing ticker"
                    }
                  ]
                }
              }
            },
            "spills": {
              "9": {
                "y": 9,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ffb3288a-95f0-4c6b-88f2-f9bdce366ea2\"}}",
                  "len": 1
                }
              },
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ffb3288a-95f0-4c6b-88f2-f9bdce366ea2\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          8,
          {
            "id": {
              "id": "2c46c11b-ca41-4104-bf04-1c92cee8ae29"
            },
            "values": {},
            "spills": {
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ffb3288a-95f0-4c6b-88f2-f9bdce366ea2\"}}",
                  "len": 1
                }
              },
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ffb3288a-95f0-4c6b-88f2-f9bdce366ea2\"}}",
                  "len": 1
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          9,
          {
            "id": {
              "id": "a0b2fd15-486b-42b0-817d-148f506381e6"
            },
            "values": {},
            "spills": {
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ffb3288a-95f0-4c6b-88f2-f9bdce366ea2\"}}",
                  "len": 1
                }
              },
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ffb3288a-95f0-4c6b-88f2-f9bdce366ea2\"}}",
                  "len": 1
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          10,
          {
            "id": {
              "id": "874e5552-cba5-4038-8121-0a46875237a7"
            },
            "values": {},
            "spills": {
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"ba0e1092-a79c-4f20-8759-c14655f88a38\"},\"column\":{\"id\":\"e0808990-5990-4c1d-a51d-ac6efee8ce81\"},\"row\":{\"id\":\"ea18bc6d-d911-4219-9055-713025773d82\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "numeric_commas": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ]
      ],
      "rows": [
        [
          0,
          {
            "id": "2669725a-37d3-420c-bbed-349cd509ad53"
          }
        ],
        [
          1,
          {
            "id": "c05b7233-6c9c-4434-b826-b3d4bf897818"
          }
        ],
        [
          2,
          {
            "id": "210a1543-0b1a-4089-a816-b7e0cba7fa37"
          }
        ],
        [
          5,
          {
            "id": "ef3c0b2e-eded-4412-8656-69946efc5a48"
          }
        ],
        [
          7,
          {
            "id": "65334faf-6836-41b7-bef4-3360c1904799"
          }
        ],
        [
          8,
          {
            "id": "a716aad6-b03f-4f97-a7f9-6e581292c32e"
          }
        ],
        [
          9,
          {
            "id": "ffb3288a-95f0-4c6b-88f2-f9bdce366ea2"
          }
        ],
        [
          10,
          {
            "id": "2fd8d67b-9c39-4ab5-a756-b8e52bae1f9a"
          }
        ],
        [
          11,
          {
            "id": "2603ae46-6447-4da8-b3ed-7a5c3b32c814"
          }
        ],
        [
          12,
          {
            "id": "83b50319-10a1-4fbf-a6c0-88af771da674"
          }
        ],
        [
          13,
          {
            "id": "904c319e-8e8e-4dc6-afc7-a231e1a383f5"
          }
        ],
        [
          14,
          {
            "id": "ea18bc6d-d911-4219-9055-713025773d82"
          }
        ],
        [
          15,
          {
            "id": "f5505e1f-c1d3-4013-9eb3-af41369c682d"
          }
        ],
        [
          17,
          {
            "id": "2a427bdb-1d71-4622-b37d-3e2d68f9ae54"
          }
        ]
      ],
      "borders": {},
      "code_cells": [
        [
          {
            "sheet": {
              "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
            },
            "column": {
              "id": "b25c66f7-58c4-47bc-8a3e-06d10bfeeca6"
            },
            "row": {
              "id": "65334faf-6836-41b7-bef4-3360c1904799"
            }
          },
          {
            "language": "Python",
            "code_string": "print(\"Hello world!\")\n# The last python statement is returned \n# as the cell value.\n\"Double click to see the code in this cell\"\n",
            "formatted_code_string": "print(\"Hello world!\")\n# The last python statement is returned\n# as the cell value.\n\"Double click to see the code in this cell\"\n",
            "last_modified": "2023-02-16T00:08:31.578Z",
            "output": {
              "stdOut": "Hello world!\n",
              "result": {
                "output_value": {
                  "size": {
                    "w": 1,
                    "h": 1
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "Double click to see the code in this cell"
                    }
                  ]
                },
                "cells_accessed": []
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
            },
            "column": {
              "id": "b25c66f7-58c4-47bc-8a3e-06d10bfeeca6"
            },
            "row": {
              "id": "2603ae46-6447-4da8-b3ed-7a5c3b32c814"
            }
          },
          {
            "language": "Python",
            "code_string": "# You can reference other cells and ranges in Python\n# using the build in function `cell` to get a value.\n# cell(x, y)\nprint(\"The value of cell 4, 7 is: \", cell(4, 7))\n\n# With cells you can do math\nprint(\"Addition cell 4, 7 and 4, 8: \", \n    cell(4, 7) + cell(4, 8))\n\n# And equality comparisons\n# Tip: you can use `c` for short referencing a cell\nprint(\"Equal: \", c(4, 7) == c(4, 8))\n\n\"Click Here\"",
            "formatted_code_string": "# You can reference other cells and ranges in Python\n# using the build in function `cell` to get a value.\n# cell(x, y)\nprint(\"The value of cell 4, 7 is: \", cell(4, 7))\n\n# With cells you can do math\nprint(\"Addition cell 4, 7 and 4, 8: \",\n      cell(4, 7) + cell(4, 8))\n\n# And equality comparisons\n# Tip: you can use `c` for short referencing a cell\nprint(\"Equal: \", c(4, 7) == c(4, 8))\n\n\"Click Here\"\n",
            "last_modified": "2023-03-17T04:24:47.001Z",
            "output": {
              "stdOut": "The value of cell 4, 7 is:  343\nAddition cell 4, 7 and 4, 8:  463\nEqual:  False\n",
              "result": {
                "output_value": {
                  "type": "text",
                  "value": "Click Here"
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "65334faf-6836-41b7-bef4-3360c1904799"
                    }
                  },
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "65334faf-6836-41b7-bef4-3360c1904799"
                    }
                  },
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "a716aad6-b03f-4f97-a7f9-6e581292c32e"
                    }
                  },
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "65334faf-6836-41b7-bef4-3360c1904799"
                    }
                  },
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "a716aad6-b03f-4f97-a7f9-6e581292c32e"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
            },
            "column": {
              "id": "e0808990-5990-4c1d-a51d-ac6efee8ce81"
            },
            "row": {
              "id": "ffb3288a-95f0-4c6b-88f2-f9bdce366ea2"
            }
          },
          {
            "language": "Python",
            "code_string": "from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(6, 8)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][1][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\npd.DataFrame([[\n    name[:20],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]], columns=[\"Full Name\", \"Revenue\", \"Market Cap\", \"Multiple\"])\n",
            "formatted_code_string": "from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(6, 8)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][1][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\npd.DataFrame([[\n    name[:20],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]], columns=[\"Full Name\", \"Revenue\", \"Market Cap\", \"Multiple\"])\n",
            "last_modified": "2023-03-21T19:52:22.507Z",
            "output": {
              "stdOut": "",
              "result": {
                "output_value": {
                  "size": {
                    "w": 4,
                    "h": 2
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "Full Name"
                    },
                    {
                      "type": "text",
                      "value": "Revenue"
                    },
                    {
                      "type": "text",
                      "value": "Market Cap"
                    },
                    {
                      "type": "text",
                      "value": "Multiple"
                    },
                    {
                      "type": "text",
                      "value": "Apple Inc."
                    },
                    {
                      "type": "text",
                      "value": "$117,154,000,000"
                    },
                    {
                      "type": "text",
                      "value": "$2.49e+12"
                    },
                    {
                      "type": "number",
                      "value": "21.26"
                    }
                  ]
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "e0808990-5990-4c1d-a51d-ac6efee8ce81"
                    },
                    "row": {
                      "id": "a716aad6-b03f-4f97-a7f9-6e581292c32e"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
            },
            "column": {
              "id": "634396df-a29e-44c1-96eb-18667c31cacb"
            },
            "row": {
              "id": "2fd8d67b-9c39-4ab5-a756-b8e52bae1f9a"
            }
          },
          {
            "language": "Formula",
            "code_string": "SUM(E7:E8)",
            "formatted_code_string": "SUM(E7:E8)",
            "last_modified": "2023-03-14T17:21:29.341Z",
            "output": {
              "stdOut": null,
              "result": {
                "output_value": {
                  "size": {
                    "w": 1,
                    "h": 1
                  },
                  "values": [
                    {
                      "type": "number",
                      "value": "463"
                    }
                  ]
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "a716aad6-b03f-4f97-a7f9-6e581292c32e"
                    }
                  },
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "65334faf-6836-41b7-bef4-3360c1904799"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
            },
            "column": {
              "id": "b25c66f7-58c4-47bc-8a3e-06d10bfeeca6"
            },
            "row": {
              "id": "83b50319-10a1-4fbf-a6c0-88af771da674"
            }
          },
          {
            "language": "Python",
            "code_string": "# Cells show when they are in the error state.\n# Fix this error by changing 0 to another number.\n1 / 0",
            "formatted_code_string": "# Cells show when they are in the error state.\n# Fix this error by changing 0 to another number.\n1 / 0",
            "last_modified": "",
            "output": {
              "stdOut": "",
              "stdErr": "ZeroDivisionError on line 3: division by zero",
              "result": {
                "error": {
                  "span": {
                    "start": 3,
                    "end": 3
                  },
                  "msg": "Python error: ZeroDivisionError on line 3: division by zero"
                }
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
            },
            "column": {
              "id": "634396df-a29e-44c1-96eb-18667c31cacb"
            },
            "row": {
              "id": "2603ae46-6447-4da8-b3ed-7a5c3b32c814"
            }
          },
          {
            "language": "Python",
            "code_string": "cell(4, 7) + cell(4, 8)",
            "formatted_code_string": "cell(4, 7) + cell(4, 8)\n",
            "last_modified": "2023-02-21T23:39:22.445Z",
            "output": {
              "stdOut": "",
              "result": {
                "output_value": {
                  "type": "text",
                  "value": "463"
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "65334faf-6836-41b7-bef4-3360c1904799"
                    }
                  },
                  {
                    "sheet": {
                      "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
                    },
                    "column": {
                      "id": "634396df-a29e-44c1-96eb-18667c31cacb"
                    },
                    "row": {
                      "id": "a716aad6-b03f-4f97-a7f9-6e581292c32e"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "ba0e1092-a79c-4f20-8759-c14655f88a38"
            },
            "column": {
              "id": "e0808990-5990-4c1d-a51d-ac6efee8ce81"
            },
            "row": {
              "id": "ea18bc6d-d911-4219-9055-713025773d82"
            }
          },
          {
            "language": "Python",
            "code_string": "# Run this cell again to generate a new fake person\n\nimport micropip\n\nawait micropip.install(\"faker\")\n\nfrom faker import Faker\nfake = Faker()\n\n[\n    [\n        \"Name\"[:13],\n        \"Birthday\",\n        \"SSN\",\n        \"Phone\",\n        \"Address\"\n    ],\n    [\n        fake.name(),\n        str(fake.date_of_birth()),\n        fake.ssn(),\n        fake.phone_number()[:13],\n        fake.address()\n    ]\n]\n",
            "formatted_code_string": "# Run this cell again to generate a new fake person\n\nimport micropip\n\nawait micropip.install(\"faker\")\n\nfrom faker import Faker\nfake = Faker()\n\n[\n    [\n        \"Name\"[:13],\n        \"Birthday\",\n        \"SSN\",\n        \"Phone\",\n        \"Address\"\n    ],\n    [\n        fake.name(),\n        str(fake.date_of_birth()),\n        fake.ssn(),\n        fake.phone_number()[:13],\n        fake.address()\n    ]\n]\n",
            "last_modified": "2023-03-17T04:20:14.849Z",
            "output": {
              "stdOut": "",
              "result": {
                "output_value": {
                  "size": {
                    "w": 5,
                    "h": 2
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "Name"
                    },
                    {
                      "type": "text",
                      "value": "Birthday"
                    },
                    {
                      "type": "text",
                      "value": "SSN"
                    },
                    {
                      "type": "text",
                      "value": "Phone"
                    },
                    {
                      "type": "text",
                      "value": "Address"
                    },
                    {
                      "type": "text",
                      "value": "Samuel King"
                    },
                    {
                      "type": "text",
                      "value": "1969-01-14"
                    },
                    {
                      "type": "text",
                      "value": "525-35-3815"
                    },
                    {
                      "type": "text",
                      "value": "950.549.2928x"
                    },
                    {
                      "type": "text",
                      "value": "975 Cynthia Turnpike\nNew John, GA 73140"
                    }
                  ]
                },
                "cells_accessed": []
              }
            }
          }
        ]
      ]
    }
  ],
  "version": "1.4"
}
