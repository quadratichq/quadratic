{
  "version": "1.5",
  "sheets": [
    {
      "id": {
        "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
      },
      "name": "Sheet 1",
      "color": null,
      "order": "a0",
      "offsets": [
        [
          [
            0,
            275.9100338070991
          ]
        ],
        []
      ],
      "columns": [
        [
          0,
          {
            "id": {
              "id": "eac8572c-2a53-43de-8b16-aa6ce3ee000c"
            },
            "values": {
              "0": {
                "y": 0,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Quadratic"
                    },
                    {
                      "type": "text",
                      "value": "The data science spreadsheet"
                    },
                    {
                      "type": "text",
                      "value": "Read more docs.quadratichq.com"
                    }
                  ]
                }
              },
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Quick start"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "1. Cells can contain code"
                    },
                    {
                      "type": "text",
                      "value": "2. Move to an empty cell and press ="
                    },
                    {
                      "type": "text",
                      "value": "    to create a new Formula or Python cell"
                    },
                    {
                      "type": "text",
                      "value": "3. Right click to access formatting menu"
                    },
                    {
                      "type": "text",
                      "value": "4. Reference other cell values in Python"
                    },
                    {
                      "type": "text",
                      "value": "5. Double click and correct this error"
                    },
                    {
                      "type": "text",
                      "value": "6. Blue cell outlines show you what cells"
                    },
                    {
                      "type": "text",
                      "value": "    contain code and purple for formulas."
                    }
                  ]
                }
              },
              "17": {
                "y": 17,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "More examples in File > Open sample"
                    }
                  ]
                }
              }
            },
            "spills": {},
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "0": {
                "y": 0,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "17": {
                "y": 17,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {
              "1": {
                "y": 1,
                "content": {
                  "value": true,
                  "len": 2
                }
              }
            },
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          1,
          {
            "id": {
              "id": "b6336d95-5590-4c1c-b229-e279c3a43c87"
            },
            "values": {
              "10": {
                "y": 10,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Bold Me"
                    }
                  ]
                }
              }
            },
            "spills": {
              "11": {
                "y": 11,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "b6336d95-5590-4c1c-b229-e279c3a43c87"
                    },
                    "row": {
                      "id": "b82b2577-ee57-409f-a9b9-821bc1ef099a"
                    }
                  },
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "10": {
                "y": 10,
                "content": {
                  "value": false,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          3,
          {
            "id": {
              "id": "59d12dd8-b0f4-4359-95d2-55bd94692047"
            },
            "values": {
              "9": {
                "y": 9,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Ex Data"
                    },
                    {
                      "type": "text",
                      "value": "SUM Formula"
                    },
                    {
                      "type": "text",
                      "value": "SUM Python"
                    }
                  ]
                }
              }
            },
            "spills": {},
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "9": {
                "y": 9,
                "content": {
                  "value": false,
                  "len": 1
                }
              }
            },
            "italic": {
              "10": {
                "y": 10,
                "content": {
                  "value": true,
                  "len": 2
                }
              }
            },
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          4,
          {
            "id": {
              "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
            },
            "values": {
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Example data"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "343"
                    },
                    {
                      "type": "text",
                      "value": "120"
                    }
                  ]
                }
              }
            },
            "spills": {
              "11": {
                "y": 11,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
                    },
                    "row": {
                      "id": "b82b2577-ee57-409f-a9b9-821bc1ef099a"
                    }
                  },
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {
              "7": {
                "y": 7,
                "content": {
                  "value": "rgb(218, 240, 255)",
                  "len": 2
                }
              }
            }
          }
        ],
        [
          6,
          {
            "id": {
              "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
            },
            "values": {
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Python examples"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Make an API request"
                    },
                    {
                      "type": "text",
                      "value": "AAPL"
                    }
                  ]
                }
              },
              "12": {
                "y": 12,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Use Python packages from PIP"
                    },
                    {
                      "type": "text",
                      "value": "Generate a fake person using the Python package Faker"
                    }
                  ]
                }
              }
            },
            "spills": {
              "9": {
                "y": 9,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "4c788e8c-8f15-4bc7-8757-1867fa91131e"
                    }
                  },
                  "len": 2
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "915a193a-9257-49e8-8ba5-3570093fbc6e"
                    }
                  },
                  "len": 2
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "12": {
                "y": 12,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {
              "8": {
                "y": 8,
                "content": {
                  "value": "rgb(218, 240, 255)",
                  "len": 1
                }
              }
            }
          }
        ],
        [
          7,
          {
            "id": {
              "id": "669a3caf-dd5a-4809-890d-75762079c9c8"
            },
            "values": {
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "< - Try changing ticker"
                    }
                  ]
                }
              }
            },
            "spills": {
              "9": {
                "y": 9,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "4c788e8c-8f15-4bc7-8757-1867fa91131e"
                    }
                  },
                  "len": 2
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "915a193a-9257-49e8-8ba5-3570093fbc6e"
                    }
                  },
                  "len": 2
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          8,
          {
            "id": {
              "id": "c80ac838-bda3-4958-a38f-6da1b9a785a5"
            },
            "values": {},
            "spills": {
              "9": {
                "y": 9,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "4c788e8c-8f15-4bc7-8757-1867fa91131e"
                    }
                  },
                  "len": 2
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "915a193a-9257-49e8-8ba5-3570093fbc6e"
                    }
                  },
                  "len": 2
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          9,
          {
            "id": {
              "id": "fec1c5a0-084f-42fd-a0be-87e5ab66b08d"
            },
            "values": {},
            "spills": {
              "9": {
                "y": 9,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "4c788e8c-8f15-4bc7-8757-1867fa91131e"
                    }
                  },
                  "len": 2
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "915a193a-9257-49e8-8ba5-3570093fbc6e"
                    }
                  },
                  "len": 2
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          10,
          {
            "id": {
              "id": "ae5f8bc5-3215-48af-8c9a-7d8313bb8d16"
            },
            "values": {},
            "spills": {
              "14": {
                "y": 14,
                "content": {
                  "value": {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "915a193a-9257-49e8-8ba5-3570093fbc6e"
                    }
                  },
                  "len": 2
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ]
      ],
      "rows": [
        [
          0,
          {
            "id": "cb355bcf-8363-4d98-a0e6-b4d4a9b40ee3"
          }
        ],
        [
          1,
          {
            "id": "fead88dc-e64e-4550-8d9e-daa8e7f1fe6c"
          }
        ],
        [
          2,
          {
            "id": "3a91b463-f3fd-4463-961e-b099fbd23cdc"
          }
        ],
        [
          5,
          {
            "id": "9741519d-59a8-4d05-a4e3-7a2da2cdb500"
          }
        ],
        [
          7,
          {
            "id": "68fe5427-58b0-458e-b7a3-11418347a691"
          }
        ],
        [
          8,
          {
            "id": "68d0b407-09b1-4b48-a851-06d1741c3d94"
          }
        ],
        [
          9,
          {
            "id": "4c788e8c-8f15-4bc7-8757-1867fa91131e"
          }
        ],
        [
          10,
          {
            "id": "41a96153-d406-427f-b329-09e9722ebec0"
          }
        ],
        [
          11,
          {
            "id": "b82b2577-ee57-409f-a9b9-821bc1ef099a"
          }
        ],
        [
          12,
          {
            "id": "66526cf0-ac34-4cfa-bf80-fa23dcb93337"
          }
        ],
        [
          13,
          {
            "id": "d58fdbf5-08ce-4bed-bac2-52c96a08702b"
          }
        ],
        [
          14,
          {
            "id": "915a193a-9257-49e8-8ba5-3570093fbc6e"
          }
        ],
        [
          15,
          {
            "id": "1d70c068-7114-4752-a044-03e0a1650812"
          }
        ],
        [
          17,
          {
            "id": "d14254c3-c2ef-4ff8-bb63-a488cc72bc94"
          }
        ]
      ],
      "borders": {
        "per_cell": {
          "borders": {}
        },
        "render_lookup": {
          "vertical": {},
          "horizontal": {}
        }
      },
      "code_cells": [
        [
          {
            "sheet": {
              "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
            },
            "column": {
              "id": "b6336d95-5590-4c1c-b229-e279c3a43c87"
            },
            "row": {
              "id": "b82b2577-ee57-409f-a9b9-821bc1ef099a"
            }
          },
          {
            "language": "Python",
            "code_string": "# You can reference other cells and ranges in Python\\n# using the build in function `cell` to get a value.\\n# cell(x, y)\\nprint(\"The value of cell 4, 7 is: \", cell(4, 7))\\n\\n# With cells you can do math\\nprint(\"Addition cell 4, 7 and 4, 8: \", \\n    cell(4, 7) + cell(4, 8))\\n\\n# And equality comparisons\\n# Tip: you can use `c` for short referencing a cell\\nprint(\"Equal: \", c(4, 7) == c(4, 8))\\n\\n\"Click Here\"",
            "formatted_code_string": "# You can reference other cells and ranges in Python\\n# using the build in function `cell` to get a value.\\n# cell(x, y)\\nprint(\"The value of cell 4, 7 is: \", cell(4, 7))\\n\\n# With cells you can do math\\nprint(\"Addition cell 4, 7 and 4, 8: \",\\n      cell(4, 7) + cell(4, 8))\\n\\n# And equality comparisons\\n# Tip: you can use `c` for short referencing a cell\\nprint(\"Equal: \", c(4, 7) == c(4, 8))\\n\\n\"Click Here\"\\n",
            "last_modified": "2023-03-17T04:24:47.001Z",
            "output": {
              "std_out": "The value of cell 4, 7 is:  343\\nAddition cell 4, 7 and 4, 8:  463\\nEqual:  False\\n",
              "result": {
                "output_value": {
                  "type": "text",
                  "value": "Click Here"
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
                    },
                    "row": {
                      "id": "68fe5427-58b0-458e-b7a3-11418347a691"
                    }
                  },
                  {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
                    },
                    "row": {
                      "id": "68fe5427-58b0-458e-b7a3-11418347a691"
                    }
                  },
                  {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
                    },
                    "row": {
                      "id": "68d0b407-09b1-4b48-a851-06d1741c3d94"
                    }
                  },
                  {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
                    },
                    "row": {
                      "id": "68fe5427-58b0-458e-b7a3-11418347a691"
                    }
                  },
                  {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
                    },
                    "row": {
                      "id": "68d0b407-09b1-4b48-a851-06d1741c3d94"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
            },
            "column": {
              "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
            },
            "row": {
              "id": "4c788e8c-8f15-4bc7-8757-1867fa91131e"
            }
          },
          {
            "language": "Python",
            "code_string": "from pprint import pprint\\nimport pandas as pd\\nimport json\\nimport js\\n\\nsymbol = c(6, 8)\\n\\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\\n    \"method\": \"GET\",\\n    \"headers\": {\"Content-Type\": \"application/json\"}\\n})\\nstock_financials_json = json.loads(await stock_financials.text())\\nincome_statement = stock_financials_json[\"results\"][1][\"financials\"][\"income_statement\"]\\nrevenue = income_statement[\"revenues\"][\"value\"]\\n\\n\\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\\n    \"method\": \"GET\",\\n    \"headers\": {\"Content-Type\": \"application/json\"}\\n})\\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\\nmarket_cap = market_data_json[\"market_cap\"]\\nname = market_data_json[\"name\"]\\n\\npd.DataFrame([[\\n    name[:20],\\n    \"${:,}\".format(int(revenue)),\\n    \"${:.2e}\".format(market_cap),\\n    \"{:,.2f}\".format(market_cap / revenue),\\n]], columns=[\"Full Name\", \"Revenue\", \"Market Cap\", \"Multiple\"])\\n",
            "formatted_code_string": "from pprint import pprint\\nimport pandas as pd\\nimport json\\nimport js\\n\\nsymbol = c(6, 8)\\n\\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\\n    \"method\": \"GET\",\\n    \"headers\": {\"Content-Type\": \"application/json\"}\\n})\\nstock_financials_json = json.loads(await stock_financials.text())\\nincome_statement = stock_financials_json[\"results\"][1][\"financials\"][\"income_statement\"]\\nrevenue = income_statement[\"revenues\"][\"value\"]\\n\\n\\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\\n    \"method\": \"GET\",\\n    \"headers\": {\"Content-Type\": \"application/json\"}\\n})\\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\\nmarket_cap = market_data_json[\"market_cap\"]\\nname = market_data_json[\"name\"]\\n\\npd.DataFrame([[\\n    name[:20],\\n    \"${:,}\".format(int(revenue)),\\n    \"${:.2e}\".format(market_cap),\\n    \"{:,.2f}\".format(market_cap / revenue),\\n]], columns=[\"Full Name\", \"Revenue\", \"Market Cap\", \"Multiple\"])\\n",
            "last_modified": "2023-03-21T19:52:22.507Z",
            "output": {
              "std_out": "",
              "result": {
                "output_value": {
                  "size": {
                    "w": 4,
                    "h": 2
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "Full Name"
                    },
                    {
                      "type": "text",
                      "value": "Revenue"
                    },
                    {
                      "type": "text",
                      "value": "Market Cap"
                    },
                    {
                      "type": "text",
                      "value": "Multiple"
                    },
                    {
                      "type": "text",
                      "value": "Apple Inc."
                    },
                    {
                      "type": "text",
                      "value": "$117,154,000,000"
                    },
                    {
                      "type": "text",
                      "value": "$2.49e+12"
                    },
                    {
                      "type": "number",
                      "value": "21.26"
                    }
                  ]
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
                    },
                    "row": {
                      "id": "68d0b407-09b1-4b48-a851-06d1741c3d94"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
            },
            "column": {
              "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
            },
            "row": {
              "id": "41a96153-d406-427f-b329-09e9722ebec0"
            }
          },
          {
            "language": "Formula",
            "code_string": "SUM(E7:E8)",
            "formatted_code_string": "SUM(E7:E8)",
            "last_modified": "2023-03-14T17:21:29.341Z"
          }
        ],
        [
          {
            "sheet": {
              "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
            },
            "column": {
              "id": "b6336d95-5590-4c1c-b229-e279c3a43c87"
            },
            "row": {
              "id": "66526cf0-ac34-4cfa-bf80-fa23dcb93337"
            }
          },
          {
            "language": "Python",
            "code_string": "# Cells show when they are in the error state.\\n# Fix this error by changing 0 to another number.\\n1 / 0",
            "formatted_code_string": "# Cells show when they are in the error state.\\n# Fix this error by changing 0 to another number.\\n1 / 0",
            "last_modified": "2023-02-16T00:08:54.000Z",
            "output": {
              "std_out": "",
              "std_err": "ZeroDivisionError on line 3: division by zero",
              "result": {
                "error": {
                  "span": null,
                  "msg": "UnknownError"
                }
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
            },
            "column": {
              "id": "b6336d95-5590-4c1c-b229-e279c3a43c87"
            },
            "row": {
              "id": "68fe5427-58b0-458e-b7a3-11418347a691"
            }
          },
          {
            "language": "Python",
            "code_string": "print(\"Hello world!\")\\n# The last python statement is returned \\n# as the cell value.\\n\"Double click to see the code in this cell\"\\n",
            "formatted_code_string": "print(\"Hello world!\")\\n# The last python statement is returned\\n# as the cell value.\\n\"Double click to see the code in this cell\"\\n",
            "last_modified": "2023-02-16T00:08:31.578Z"
          }
        ],
        [
          {
            "sheet": {
              "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
            },
            "column": {
              "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
            },
            "row": {
              "id": "b82b2577-ee57-409f-a9b9-821bc1ef099a"
            }
          },
          {
            "language": "Python",
            "code_string": "cell(4, 7) + cell(4, 8)",
            "formatted_code_string": "cell(4, 7) + cell(4, 8)\\n",
            "last_modified": "2023-02-21T23:39:22.445Z",
            "output": {
              "std_out": "",
              "result": {
                "output_value": {
                  "type": "text",
                  "value": "463"
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
                    },
                    "row": {
                      "id": "68fe5427-58b0-458e-b7a3-11418347a691"
                    }
                  },
                  {
                    "sheet": {
                      "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
                    },
                    "column": {
                      "id": "fdaa473b-91e1-48c3-86cb-faa0463fa4ab"
                    },
                    "row": {
                      "id": "68d0b407-09b1-4b48-a851-06d1741c3d94"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "f1946424-a91f-4c43-9a5a-31e733a138b5"
            },
            "column": {
              "id": "1cf79c2e-d091-4acc-934e-bc72fed3e722"
            },
            "row": {
              "id": "915a193a-9257-49e8-8ba5-3570093fbc6e"
            }
          },
          {
            "language": "Python",
            "code_string": "# Run this cell again to generate a new fake person\\n\\nimport micropip\\n\\nawait micropip.install(\"faker\")\\n\\nfrom faker import Faker\\nfake = Faker()\\n\\n[\\n    [\\n        \"Name\"[:13],\\n        \"Birthday\",\\n        \"SSN\",\\n        \"Phone\",\\n        \"Address\"\\n    ],\\n    [\\n        fake.name(),\\n        str(fake.date_of_birth()),\\n        fake.ssn(),\\n        fake.phone_number()[:13],\\n        fake.address()\\n    ]\\n]\\n",
            "formatted_code_string": "# Run this cell again to generate a new fake person\\n\\nimport micropip\\n\\nawait micropip.install(\"faker\")\\n\\nfrom faker import Faker\\nfake = Faker()\\n\\n[\\n    [\\n        \"Name\"[:13],\\n        \"Birthday\",\\n        \"SSN\",\\n        \"Phone\",\\n        \"Address\"\\n    ],\\n    [\\n        fake.name(),\\n        str(fake.date_of_birth()),\\n        fake.ssn(),\\n        fake.phone_number()[:13],\\n        fake.address()\\n    ]\\n]\\n",
            "last_modified": "2023-03-17T04:20:14.849Z",
            "output": {
              "std_out": "",
              "result": {
                "output_value": {
                  "size": {
                    "w": 5,
                    "h": 2
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "Name"
                    },
                    {
                      "type": "text",
                      "value": "Birthday"
                    },
                    {
                      "type": "text",
                      "value": "SSN"
                    },
                    {
                      "type": "text",
                      "value": "Phone"
                    },
                    {
                      "type": "text",
                      "value": "Address"
                    },
                    {
                      "type": "text",
                      "value": "Samuel King"
                    },
                    {
                      "type": "text",
                      "value": "1969-01-14"
                    },
                    {
                      "type": "text",
                      "value": "525-35-3815"
                    },
                    {
                      "type": "text",
                      "value": "950.549.2928x"
                    },
                    {
                      "type": "text",
                      "value": "975 Cynthia Turnpike\\nNew John, GA 73140"
                    }
                  ]
                },
                "cells_accessed": []
              }
            }
          }
        ]
      ]
    }
  ]
}
