{
  "sheets": [
    {
      "id": {
        "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
      },
      "name": "Sheet 1",
      "color": null,
      "order": "a0",
      "offsets": [
        [
          [
            0,
            275.9100338070991
          ]
        ],
        []
      ],
      "columns": [
        [
          0,
          {
            "id": {
              "id": "be8a90aa-373a-401f-8245-eed44b2d1959"
            },
            "values": {
              "11": {
                "y": 11,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "4. Reference other cell values in Python"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "1. Cells can contain code"
                    }
                  ]
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "3. Right click to access formatting menu"
                    }
                  ]
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "    contain code and purple for formulas."
                    }
                  ]
                }
              },
              "17": {
                "y": 17,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "More examples in File > Open sample"
                    }
                  ]
                }
              },
              "2": {
                "y": 2,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Read more docs.quadratichq.com"
                    }
                  ]
                }
              },
              "0": {
                "y": 0,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Quadratic"
                    }
                  ]
                }
              },
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Quick start"
                    }
                  ]
                }
              },
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "2. Move to an empty cell and press ="
                    }
                  ]
                }
              },
              "12": {
                "y": 12,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "5. Double click and correct this error"
                    }
                  ]
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "    to create a new Formula or Python cell"
                    }
                  ]
                }
              },
              "13": {
                "y": 13,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "6. Blue cell outlines show you what cells"
                    }
                  ]
                }
              },
              "1": {
                "y": 1,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "The data science spreadsheet"
                    }
                  ]
                }
              }
            },
            "spills": {},
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "0": {
                "y": 0,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "17": {
                "y": 17,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {
              "2": {
                "y": 2,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "1": {
                "y": 1,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          1,
          {
            "id": {
              "id": "189d0357-cd41-46e6-9a17-2bb43c7aec77"
            },
            "values": {
              "10": {
                "y": 10,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Bold Me"
                    }
                  ]
                }
              }
            },
            "spills": {
              "12": {
                "y": 12,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"189d0357-cd41-46e6-9a17-2bb43c7aec77\"},\"row\":{\"id\":\"9ba5770b-1ea8-4b6f-b1fe-2f7678708e6b\"}}",
                  "len": 1
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"189d0357-cd41-46e6-9a17-2bb43c7aec77\"},\"row\":{\"id\":\"75e8a5fe-53ce-4abc-83c5-ea1655afdc3b\"}}",
                  "len": 1
                }
              },
              "11": {
                "y": 11,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"189d0357-cd41-46e6-9a17-2bb43c7aec77\"},\"row\":{\"id\":\"6fdc87a6-4a43-45e7-a860-c31dbec817ae\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "10": {
                "y": 10,
                "content": {
                  "value": false,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          3,
          {
            "id": {
              "id": "a3d002b3-e011-416b-924d-eed05d16544b"
            },
            "values": {
              "11": {
                "y": 11,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "SUM Python"
                    }
                  ]
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "SUM Formula"
                    }
                  ]
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Ex Data"
                    }
                  ]
                }
              }
            },
            "spills": {},
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "9": {
                "y": 9,
                "content": {
                  "value": false,
                  "len": 1
                }
              }
            },
            "italic": {
              "11": {
                "y": 11,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          4,
          {
            "id": {
              "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
            },
            "values": {
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Example data"
                    }
                  ]
                }
              },
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "number",
                      "value": "120"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "number",
                      "value": "343"
                    }
                  ]
                }
              }
            },
            "spills": {
              "11": {
                "y": 11,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"76332748-1b1f-452d-ae4d-6542de1218e2\"},\"row\":{\"id\":\"6fdc87a6-4a43-45e7-a860-c31dbec817ae\"}}",
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"76332748-1b1f-452d-ae4d-6542de1218e2\"},\"row\":{\"id\":\"7705cdc0-8c49-4be2-8029-80b39426956f\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {
              "8": {
                "y": 8,
                "content": {
                  "value": "rgb(218, 240, 255)",
                  "len": 1
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "value": "rgb(218, 240, 255)",
                  "len": 1
                }
              }
            }
          }
        ],
        [
          6,
          {
            "id": {
              "id": "b23a5df6-ad02-482c-8bcb-cec796a40ad5"
            },
            "values": {
              "12": {
                "y": 12,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Use Python packages from PIP"
                    }
                  ]
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Make an API request"
                    }
                  ]
                }
              },
              "13": {
                "y": 13,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Generate a fake person using the Python package Faker"
                    }
                  ]
                }
              },
              "5": {
                "y": 5,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "Python examples"
                    }
                  ]
                }
              },
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "AAPL"
                    }
                  ]
                }
              }
            },
            "spills": {
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              },
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"b6e1d3cf-fcec-49b8-bd57-0899d54bc48f\"}}",
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"b6e1d3cf-fcec-49b8-bd57-0899d54bc48f\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {
              "12": {
                "y": 12,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "5": {
                "y": 5,
                "content": {
                  "value": true,
                  "len": 1
                }
              },
              "7": {
                "y": 7,
                "content": {
                  "value": true,
                  "len": 1
                }
              }
            },
            "italic": {},
            "text_color": {},
            "fill_color": {
              "8": {
                "y": 8,
                "content": {
                  "value": "rgb(218, 240, 255)",
                  "len": 1
                }
              }
            }
          }
        ],
        [
          7,
          {
            "id": {
              "id": "f64b2b5a-1509-4e12-8529-76533aaf0e8e"
            },
            "values": {
              "8": {
                "y": 8,
                "content": {
                  "Values": [
                    {
                      "type": "text",
                      "value": "< - Try changing ticker"
                    }
                  ]
                }
              }
            },
            "spills": {
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"b6e1d3cf-fcec-49b8-bd57-0899d54bc48f\"}}",
                  "len": 1
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"b6e1d3cf-fcec-49b8-bd57-0899d54bc48f\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          8,
          {
            "id": {
              "id": "59b699a0-13e1-4a62-bd4a-e287530ab530"
            },
            "values": {},
            "spills": {
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"b6e1d3cf-fcec-49b8-bd57-0899d54bc48f\"}}",
                  "len": 1
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              },
              "9": {
                "y": 9,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"b6e1d3cf-fcec-49b8-bd57-0899d54bc48f\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          9,
          {
            "id": {
              "id": "c47f778e-e6aa-4c6a-bde6-92c8e4ec6bf2"
            },
            "values": {},
            "spills": {
              "9": {
                "y": 9,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"b6e1d3cf-fcec-49b8-bd57-0899d54bc48f\"}}",
                  "len": 1
                }
              },
              "10": {
                "y": 10,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"b6e1d3cf-fcec-49b8-bd57-0899d54bc48f\"}}",
                  "len": 1
                }
              },
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              },
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ],
        [
          10,
          {
            "id": {
              "id": "bee4efd3-f3fe-41b8-a449-0fb0777737ae"
            },
            "values": {},
            "spills": {
              "14": {
                "y": 14,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              },
              "15": {
                "y": 15,
                "content": {
                  "value": "{\"sheet\":{\"id\":\"dbf6331c-e8ab-480d-b31c-0a0f64a50dc6\"},\"column\":{\"id\":\"b23a5df6-ad02-482c-8bcb-cec796a40ad5\"},\"row\":{\"id\":\"5153ef95-8f0d-47f7-8f43-1ade4f1eb67a\"}}",
                  "len": 1
                }
              }
            },
            "align": {},
            "wrap": {},
            "numeric_format": {},
            "numeric_decimals": {},
            "bold": {},
            "italic": {},
            "text_color": {},
            "fill_color": {}
          }
        ]
      ],
      "rows": [
        [
          0,
          {
            "id": "35f66697-ac37-4263-baea-74941b8d48f7"
          }
        ],
        [
          1,
          {
            "id": "7052a0b9-79f9-41c1-abc3-ae5a3ae655c8"
          }
        ],
        [
          2,
          {
            "id": "85ecce8a-2245-477b-8cae-9b56a5278378"
          }
        ],
        [
          5,
          {
            "id": "3353519c-28c0-4faf-b3e5-763cd83f481f"
          }
        ],
        [
          7,
          {
            "id": "75e8a5fe-53ce-4abc-83c5-ea1655afdc3b"
          }
        ],
        [
          8,
          {
            "id": "c0ce3a35-926e-4096-8e7e-e33b6bfbfcf9"
          }
        ],
        [
          9,
          {
            "id": "b6e1d3cf-fcec-49b8-bd57-0899d54bc48f"
          }
        ],
        [
          10,
          {
            "id": "7705cdc0-8c49-4be2-8029-80b39426956f"
          }
        ],
        [
          11,
          {
            "id": "6fdc87a6-4a43-45e7-a860-c31dbec817ae"
          }
        ],
        [
          12,
          {
            "id": "9ba5770b-1ea8-4b6f-b1fe-2f7678708e6b"
          }
        ],
        [
          13,
          {
            "id": "8ba5970d-a248-4a20-aca8-ead573599213"
          }
        ],
        [
          14,
          {
            "id": "5153ef95-8f0d-47f7-8f43-1ade4f1eb67a"
          }
        ],
        [
          15,
          {
            "id": "7495d492-6fa2-4ce7-b4a1-64e93ba7117e"
          }
        ],
        [
          17,
          {
            "id": "ee324086-a551-4fea-a88f-986e8e0b0c15"
          }
        ]
      ],
      "borders": {},
      "code_cells": [
        [
          {
            "sheet": {
              "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
            },
            "column": {
              "id": "189d0357-cd41-46e6-9a17-2bb43c7aec77"
            },
            "row": {
              "id": "75e8a5fe-53ce-4abc-83c5-ea1655afdc3b"
            }
          },
          {
            "language": "Python",
            "code_string": "print(\"Hello world!\")\n# The last python statement is returned \n# as the cell value.\n\"Double click to see the code in this cell\"\n",
            "formatted_code_string": "print(\"Hello world!\")\n# The last python statement is returned\n# as the cell value.\n\"Double click to see the code in this cell\"\n",
            "last_modified": "2023-02-16T00:08:31.578Z",
            "output": {
              "stdOut": "Hello world!\n",
              "result": {
                "output_value": {
                  "size": {
                    "w": 1,
                    "h": 1
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "Double click to see the code in this cell"
                    }
                  ]
                },
                "cells_accessed": []
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
            },
            "column": {
              "id": "189d0357-cd41-46e6-9a17-2bb43c7aec77"
            },
            "row": {
              "id": "6fdc87a6-4a43-45e7-a860-c31dbec817ae"
            }
          },
          {
            "language": "Python",
            "code_string": "# You can reference other cells and ranges in Python\n# using the build in function `cell` to get a value.\n# cell(x, y)\nprint(\"The value of cell 4, 7 is: \", cell(4, 7))\n\n# With cells you can do math\nprint(\"Addition cell 4, 7 and 4, 8: \", \n    cell(4, 7) + cell(4, 8))\n\n# And equality comparisons\n# Tip: you can use `c` for short referencing a cell\nprint(\"Equal: \", c(4, 7) == c(4, 8))\n\n\"Click Here\"",
            "formatted_code_string": "# You can reference other cells and ranges in Python\n# using the build in function `cell` to get a value.\n# cell(x, y)\nprint(\"The value of cell 4, 7 is: \", cell(4, 7))\n\n# With cells you can do math\nprint(\"Addition cell 4, 7 and 4, 8: \",\n      cell(4, 7) + cell(4, 8))\n\n# And equality comparisons\n# Tip: you can use `c` for short referencing a cell\nprint(\"Equal: \", c(4, 7) == c(4, 8))\n\n\"Click Here\"\n",
            "last_modified": "2023-03-17T04:24:47.001Z",
            "output": {
              "stdOut": "The value of cell 4, 7 is:  343\nAddition cell 4, 7 and 4, 8:  463\nEqual:  False\n",
              "result": {
                "output_value": {
                  "type": "text",
                  "value": "Click Here"
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "75e8a5fe-53ce-4abc-83c5-ea1655afdc3b"
                    }
                  },
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "75e8a5fe-53ce-4abc-83c5-ea1655afdc3b"
                    }
                  },
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "c0ce3a35-926e-4096-8e7e-e33b6bfbfcf9"
                    }
                  },
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "75e8a5fe-53ce-4abc-83c5-ea1655afdc3b"
                    }
                  },
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "c0ce3a35-926e-4096-8e7e-e33b6bfbfcf9"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
            },
            "column": {
              "id": "b23a5df6-ad02-482c-8bcb-cec796a40ad5"
            },
            "row": {
              "id": "5153ef95-8f0d-47f7-8f43-1ade4f1eb67a"
            }
          },
          {
            "language": "Python",
            "code_string": "# Run this cell again to generate a new fake person\n\nimport micropip\n\nawait micropip.install(\"faker\")\n\nfrom faker import Faker\nfake = Faker()\n\n[\n    [\n        \"Name\"[:13],\n        \"Birthday\",\n        \"SSN\",\n        \"Phone\",\n        \"Address\"\n    ],\n    [\n        fake.name(),\n        str(fake.date_of_birth()),\n        fake.ssn(),\n        fake.phone_number()[:13],\n        fake.address()\n    ]\n]\n",
            "formatted_code_string": "# Run this cell again to generate a new fake person\n\nimport micropip\n\nawait micropip.install(\"faker\")\n\nfrom faker import Faker\nfake = Faker()\n\n[\n    [\n        \"Name\"[:13],\n        \"Birthday\",\n        \"SSN\",\n        \"Phone\",\n        \"Address\"\n    ],\n    [\n        fake.name(),\n        str(fake.date_of_birth()),\n        fake.ssn(),\n        fake.phone_number()[:13],\n        fake.address()\n    ]\n]\n",
            "last_modified": "2023-03-17T04:20:14.849Z",
            "output": {
              "stdOut": "",
              "result": {
                "output_value": {
                  "size": {
                    "w": 5,
                    "h": 2
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "Name"
                    },
                    {
                      "type": "text",
                      "value": "Birthday"
                    },
                    {
                      "type": "text",
                      "value": "SSN"
                    },
                    {
                      "type": "text",
                      "value": "Phone"
                    },
                    {
                      "type": "text",
                      "value": "Address"
                    },
                    {
                      "type": "text",
                      "value": "Samuel King"
                    },
                    {
                      "type": "text",
                      "value": "1969-01-14"
                    },
                    {
                      "type": "text",
                      "value": "525-35-3815"
                    },
                    {
                      "type": "text",
                      "value": "950.549.2928x"
                    },
                    {
                      "type": "text",
                      "value": "975 Cynthia Turnpike\nNew John, GA 73140"
                    }
                  ]
                },
                "cells_accessed": []
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
            },
            "column": {
              "id": "b23a5df6-ad02-482c-8bcb-cec796a40ad5"
            },
            "row": {
              "id": "b6e1d3cf-fcec-49b8-bd57-0899d54bc48f"
            }
          },
          {
            "language": "Python",
            "code_string": "from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(6, 8)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][1][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\npd.DataFrame([[\n    name[:20],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]], columns=[\"Full Name\", \"Revenue\", \"Market Cap\", \"Multiple\"])\n",
            "formatted_code_string": "from pprint import pprint\nimport pandas as pd\nimport json\nimport js\n\nsymbol = c(6, 8)\n\nstock_financials = await js.fetch('https://api.polygon.io/vX/reference/financials?ticker={}&apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nstock_financials_json = json.loads(await stock_financials.text())\nincome_statement = stock_financials_json[\"results\"][1][\"financials\"][\"income_statement\"]\nrevenue = income_statement[\"revenues\"][\"value\"]\n\n\nmarket_data = await js.fetch('https://api.polygon.io/v3/reference/tickers/{}?apiKey=_xBCl_0zcb9H1W25jJEK5pQaQTVLtemL'.format(symbol), {\n    \"method\": \"GET\",\n    \"headers\": {\"Content-Type\": \"application/json\"}\n})\nmarket_data_json = json.loads(await market_data.text())[\"results\"]\nmarket_cap = market_data_json[\"market_cap\"]\nname = market_data_json[\"name\"]\n\npd.DataFrame([[\n    name[:20],\n    \"${:,}\".format(int(revenue)),\n    \"${:.2e}\".format(market_cap),\n    \"{:,.2f}\".format(market_cap / revenue),\n]], columns=[\"Full Name\", \"Revenue\", \"Market Cap\", \"Multiple\"])\n",
            "last_modified": "2023-03-21T19:52:22.507Z",
            "output": {
              "stdOut": "",
              "result": {
                "output_value": {
                  "size": {
                    "w": 4,
                    "h": 2
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "Full Name"
                    },
                    {
                      "type": "text",
                      "value": "Revenue"
                    },
                    {
                      "type": "text",
                      "value": "Market Cap"
                    },
                    {
                      "type": "text",
                      "value": "Multiple"
                    },
                    {
                      "type": "text",
                      "value": "Apple Inc."
                    },
                    {
                      "type": "text",
                      "value": "$117,154,000,000"
                    },
                    {
                      "type": "text",
                      "value": "$2.49e+12"
                    },
                    {
                      "type": "text",
                      "value": "21.26"
                    }
                  ]
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "b23a5df6-ad02-482c-8bcb-cec796a40ad5"
                    },
                    "row": {
                      "id": "c0ce3a35-926e-4096-8e7e-e33b6bfbfcf9"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
            },
            "column": {
              "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
            },
            "row": {
              "id": "7705cdc0-8c49-4be2-8029-80b39426956f"
            }
          },
          {
            "language": "Formula",
            "code_string": "SUM(E7:E8)",
            "formatted_code_string": "SUM(E7:E8)",
            "last_modified": "2023-03-14T17:21:29.341Z",
            "output": {
              "stdOut": null,
              "result": {
                "output_value": {
                  "size": {
                    "w": 1,
                    "h": 1
                  },
                  "values": [
                    {
                      "type": "text",
                      "value": "463"
                    }
                  ]
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "c0ce3a35-926e-4096-8e7e-e33b6bfbfcf9"
                    }
                  },
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "75e8a5fe-53ce-4abc-83c5-ea1655afdc3b"
                    }
                  }
                ]
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
            },
            "column": {
              "id": "189d0357-cd41-46e6-9a17-2bb43c7aec77"
            },
            "row": {
              "id": "9ba5770b-1ea8-4b6f-b1fe-2f7678708e6b"
            }
          },
          {
            "language": "Python",
            "code_string": "# Cells show when they are in the error state.\n# Fix this error by changing 0 to another number.\n1 / 0",
            "formatted_code_string": "# Cells show when they are in the error state.\n# Fix this error by changing 0 to another number.\n1 / 0",
            "last_modified": "",
            "output": {
              "stdOut": "",
              "stdErr": "ZeroDivisionError on line 3: division by zero",
              "result": {
                "error": {
                  "span": {
                    "start": 3,
                    "end": 3
                  },
                  "msg": "(unknown error)"
                }
              }
            }
          }
        ],
        [
          {
            "sheet": {
              "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
            },
            "column": {
              "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
            },
            "row": {
              "id": "6fdc87a6-4a43-45e7-a860-c31dbec817ae"
            }
          },
          {
            "language": "Python",
            "code_string": "cell(4, 7) + cell(4, 8)",
            "formatted_code_string": "cell(4, 7) + cell(4, 8)\n",
            "last_modified": "2023-02-21T23:39:22.445Z",
            "output": {
              "stdOut": "",
              "result": {
                "output_value": {
                  "type": "text",
                  "value": "463"
                },
                "cells_accessed": [
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "75e8a5fe-53ce-4abc-83c5-ea1655afdc3b"
                    }
                  },
                  {
                    "sheet": {
                      "id": "dbf6331c-e8ab-480d-b31c-0a0f64a50dc6"
                    },
                    "column": {
                      "id": "76332748-1b1f-452d-ae4d-6542de1218e2"
                    },
                    "row": {
                      "id": "c0ce3a35-926e-4096-8e7e-e33b6bfbfcf9"
                    }
                  }
                ]
              }
            }
          }
        ]
      ]
    }
  ],
  "version": "1.4"
}
