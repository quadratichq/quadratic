apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: quadratic-cloud
  labels:
    app.kubernetes.io/name: quadratic-cloud-redis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: quadratic-cloud
data:
  redis.conf: |
    # Redis 7.x optimized configuration
    maxmemory 4gb
    maxmemory-policy allkeys-lru

    # Persistence - balanced approach
    save 300 10
    save 60 1000
    appendonly yes
    appendfsync everysec

    # Performance
    tcp-keepalive 60
    timeout 300
    tcp-backlog 511
    databases 1

    # Security (disabled for local development)
    protected-mode no

    # Optimization
    hash-max-ziplist-entries 512
    list-max-ziplist-size -2
    set-max-intset-entries 512
---
apiVersion: v1
kind: Service
metadata:
  name: quadratic-cloud-redis
  namespace: quadratic-cloud
  labels:
    app.kubernetes.io/name: quadratic-cloud-redis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: quadratic-cloud
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: quadratic-cloud-redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: quadratic-cloud-redis
  namespace: quadratic-cloud
  labels:
    app.kubernetes.io/name: quadratic-cloud-redis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: quadratic-cloud
spec:
  serviceName: quadratic-cloud-redis
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quadratic-cloud-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quadratic-cloud-redis
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: quadratic-cloud
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6379"
    spec:
      nodeSelector:
        quadratic.io/node-role: redis
      tolerations:
        - key: "quadratic.io/dedicated"
          operator: "Equal"
          value: "redis"
          effect: "NoSchedule"
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: quadratic-cloud-redis
          image: redis:7.2-alpine
          command:
            - redis-server
            - /etc/redis/redis.conf
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
          resources:
            requests:
              cpu: "500m"
              memory: "2Gi"
            limits:
              cpu: "2000m"
              memory: "4Gi"
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis
              readOnly: true
            - name: redis-data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app.kubernetes.io/name: quadratic-cloud-redis
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
